# Test for __name__ label drop.
load 5m
	metric{env="1"}	0 60 120
	another_metric{env="1"}	60 120 180

# Does not drop __name__ for vector selector
eval instant at 15m {__name__!=""}
	metric{env="1"} 120
	another_metric{env="1"} 180

# Drops __name__ for functions (leading to duplicate labelset errors)
eval_fail instant at 15m rate({env="1"}[10m])

# Drops __name__ for unary expressions (leading to duplicate labelset errors)
eval_fail instant at 15m -{__name__!=""}

# Drops __name__ for binary operations (leading to duplicate labelset errors)
eval_fail instant at 15m {__name__!=""} + {__name__!=""}

# Drops __name__ for vector-scalar operations (leading to duplicate labelset errors)
eval_fail instant at 15m {__name__!=""} * 2

# Allows relabeling (to-be-dropped) __name__  via label_replace
eval instant at 15m label_replace(rate({env="1"}[10m]), "my_name", "rate_$1", "__name__", "(.+)")
	{my_name="rate_metric", env="1"} 0.2
	{my_name="rate_another_metric", env="1"} 0.2

# Allows preserving __name__ via label_replace
eval instant at 15m label_replace(rate({env="1"}[10m]), "__name__", "rate_$1", "__name__", "(.+)")
	rate_metric{env="1"} 0.2
	rate_another_metric{env="1"} 0.2

# Allows relabeling (to-be-dropped) __name__  via label_join
eval instant at 15m label_join(rate({env="1"}[10m]), "my_name", "_", "__name__")
	{my_name="metric", env="1"} 0.2
	{my_name="another_metric", env="1"} 0.2

# Allows preserving __name__ via label_join
eval instant at 15m label_join(rate({env="1"}[10m]), "__name__", "_", "__name__", "env")
	metric_1{env="1"} 0.2
	another_metric_1{env="1"} 0.2

# Aggregations by __name__ lead to duplicate labelset errors due to not yet removed __name__ label
eval_fail instant at 15m sum by (__name__) (rate({env="1"}[10m]))

# Other aggregations preserve __name__ label
eval instant at 15m sum by (__name__, env) ({env="1"})
	metric{env="1"} 120
	another_metric{env="1"} 180
